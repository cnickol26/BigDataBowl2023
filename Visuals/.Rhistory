knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gganimate)
library(ggplot2)
library(cowplot)
library(repr)
games<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/games.csv")
players<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/players.csv")
plays<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/plays.csv")
week2<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/week2.csv")
example_play <- plays %>% filter(gameId==2021091902 & playId == 389) %>% select(gameId,playId,playDescription)
example_play <- inner_join(example_play,
games,
by = c("gameId" = "gameId"))
example_play <- inner_join(example_play,
week2,
by = c("gameId" = "gameId",
"playId" = "playId"))
cols_fill <- c("#FFA500", "#663300", "#5C4033")
cols_col <- c("#000000", "#663300", "#000000")
xmin <- 0
xmax <- 160/3
hash.right <- 38.35
hash.left <- 12
hash.width <- 3.3
plot_title <- str_trim(gsub("\\s*\\([^\\)]+\\)","",as.character(example_play$playDescription[1])))
ymin <- 0
ymax <- 120
#hash marks
df.hash <- expand.grid(x = c(0, 23.36667, 29.96667, xmax), y = (10:110))
df.hash <- df.hash %>% filter(!(floor(y %% 5) == 0))
df.hash <- df.hash %>% filter(y < ymax, y > ymin)
#plotting
p<- ggplot() +
#setting size and color parameters
scale_size_manual(values = c(6, 4, 6), guide = FALSE) +
scale_shape_manual(values = c(21, 16, 21), guide = FALSE) +
scale_fill_manual(values = cols_fill, guide = FALSE) +
scale_colour_manual(values = cols_col, guide = FALSE) +
#adding hash marks
annotate("text", x = df.hash$x[df.hash$x < 55/2],
y = df.hash$y[df.hash$x < 55/2], label = "_", hjust = 0, vjust = -0.2) +
annotate("text", x = df.hash$x[df.hash$x > 55/2],
y = df.hash$y[df.hash$x > 55/2], label = "_", hjust = 1, vjust = -0.2) +
#adding yard lines
annotate("segment", x = xmin,
y = seq(max(10, ymin), min(ymax, 110), by = 5),
xend =  xmax,
yend = seq(max(10, ymin), min(ymax, 110), by = 5)) +
#adding field yardline text
annotate("text", x = rep(hash.left, 11), y = seq(10, 110, by = 10),
label = c("G   ", seq(10, 50, by = 10), rev(seq(10, 40, by = 10)), "   G"),
angle = 270, size = 4) +
annotate("text", x = rep((xmax - hash.left), 11), y = seq(10, 110, by = 10),
label = c("   G", seq(10, 50, by = 10), rev(seq(10, 40, by = 10)), "G   "),
angle = 90, size = 4) +
#adding field exterior
annotate("segment", x = c(xmin, xmin, xmax, xmax),
y = c(ymin, ymax, ymax, ymin),
xend = c(xmin, xmax, xmax, xmin),
yend = c(ymax, ymax, ymin, ymin), colour = "black") +
#adding field interior
annotate("rect", xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax,
fill = "dark green", alpha = 0.2) +
#adding players
geom_point(data = example_play, aes(x = (xmax-y),
y = x,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team),
alpha = 0.7) +
#adding jersey numbers
geom_text(data = example_play, aes(x = (xmax-y), y = x, label = jerseyNumber), colour = "white",
vjust = 0.36, size = 3.5) +
#applying plot limits
ylim(ymin, ymax) +
coord_fixed() +
#applying theme
theme_nothing() +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes('linear')
library(tidyverse)
library(gganimate)
library(ggplot2)
library(cowplot)
library(repr)
games<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/games.csv")
players<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/players.csv")
plays<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/plays.csv")
week2<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/week2.csv")
example_play <- plays %>% filter(gameId==2021091902 & playId == 389) %>% select(gameId,playId,playDescription)
example_play <- inner_join(example_play,
games,
by = c("gameId" = "gameId"))
example_play <- inner_join(example_play,
week2,
by = c("gameId" = "gameId",
"playId" = "playId"))
cols_fill <- c("#FFA500", "#663300", "#5C4033")
cols_col <- c("#000000", "#663300", "#000000")
xmin <- 0
xmax <- 160/3
hash.right <- 38.35
hash.left <- 12
hash.width <- 3.3
plot_title <- str_trim(gsub("\\s*\\([^\\)]+\\)","",as.character(example_play$playDescription[1])))
plot_title
ymin <- 0
ymax <- 120
expand.grid(x = c(0, 23.36667, 29.96667, xmax), y = (10:110))
df_examplePlay <- df_plays %>%
select(gameId, playId, playDescription) %>%
filter(gameId==2021091902 & playId == 389)
players<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/players.csv")
plays<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/plays.csv")
week2<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/week2.csv")
df_examplePlay <- plays %>%
select(gameId, playId, playDescription) %>%
filter(gameId==2021091902 & playId == 389)
#merging tracking data to play
df_examplePlayTracking <- inner_join(df_examplePlay,
week2,
by = c("gameId" = "gameId",
"playId" = "playId")) %>%
#Standardizing tracking data so its always in direction of offensive team.
mutate(x = ifelse(playDirection == "left", 120-x, x),
y = ifelse(playDirection == "left", 160/3 - y, y))
#loading command to make NFL field in ggplot (credit to Marschall Furman)
source("https://raw.githubusercontent.com/mlfurman3/gg_field/main/gg_field.R")
#loading command to make NFL field in ggplot (credit to Marschall Furman)
source("https://raw.githubusercontent.com/mlfurman3/gg_field/main/gg_field.R")
cols_fill <- c("#FFA500", "#663300", "#5C4033")
cols_col <- c("#000000", "#663300", "#000000")
size_vals <- c(6, 4, 6)
shape_vals <- c(21, 16, 21)
plot_title <- df_examplePlay$playDescription
nFrames <- max(df_examplePlayTracking$frameId)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 65, yardmax = 122) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = FALSE) +
scale_shape_manual(values = shape_vals, guide = FALSE) +
scale_fill_manual(values = cols_fill, guide = FALSE) +
scale_colour_manual(values = cols_col, guide = FALSE) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team),
alpha = 0.7) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear") +
NULL
animate(anim, width = 720, height = 440,
fps = 10, nframe = nFrames)
anim_save("./ExamplePlay.gif",
animate(anim, width = 720, height = 440,
fps = 10, nframe = nFrames))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gganimate)
library(ggplot2)
library(cowplot)
library(repr)
#loading command to make NFL field in ggplot (credit to Marschall Furman)
source("https://raw.githubusercontent.com/mlfurman3/gg_field/main/gg_field.R")
players<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/players.csv")
plays<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/plays.csv")
week2<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/week2.csv")
df_examplePlay <- plays %>%
select(gameId, playId, playDescription) %>%
filter(gameId==2021091902 & playId == 389)
#merging tracking data to play
df_examplePlayTracking <- inner_join(df_examplePlay,
week2,
by = c("gameId" = "gameId",
"playId" = "playId")) %>%
#Standardizing tracking data so its always in direction of offensive team.
mutate(x = ifelse(playDirection == "left", 120-x, x),
y = ifelse(playDirection == "left", 160/3 - y, y))
cols_fill <- c("#FFA500", "#663300", "#5C4033")
cols_col <- c("#000000", "#663300", "#000000")
size_vals <- c(6, 4, 6)
shape_vals <- c(21, 16, 21)
plot_title <- df_examplePlay$playDescription
nFrames <- max(df_examplePlayTracking$frameId)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 65, yardmax = 122) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = FALSE) +
scale_shape_manual(values = shape_vals, guide = FALSE) +
scale_fill_manual(values = cols_fill, guide = FALSE) +
scale_colour_manual(values = cols_col, guide = FALSE) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team),
alpha = 0.7) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear") +
NULL
animate(anim, width = 720, height = 440,fps = 10, nframe = nFrames)
View(anim)
View(df_examplePlay)
View(df_examplePlayTracking)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 65, yardmax = 122) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = FALSE) +
scale_shape_manual(values = shape_vals, guide = FALSE) +
scale_fill_manual(values = cols_fill, guide = FALSE) +
scale_colour_manual(values = cols_col, guide = FALSE) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team),
alpha = 0.7) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear") +
NULL
View(anim)
animate(anim, width = 720, height = 440,fps = 10, nframe = nFrames)
animate(anim)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 65, yardmax = 122) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = FALSE) +
scale_shape_manual(values = shape_vals, guide = FALSE) +
scale_fill_manual(values = cols_fill, guide = FALSE) +
scale_colour_manual(values = cols_col, guide = FALSE) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team),
alpha = 0.7) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear")
animate(anim, width = 720, height = 440,fps = 10, nframe = nFrames)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 65, yardmax = 122) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = "none") +
scale_shape_manual(values = shape_vals, guide = "none") +
scale_fill_manual(values = cols_fill, guide = "none") +
scale_colour_manual(values = cols_col, guide = "none") +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team),
alpha = 0.7) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear")
animate(anim, width = 720, height = 440,fps = 10, nframe = nFrames)
animate(anim)
animate(anim, width = 720, height = 440,fps = 10, nframe = nFrames)
anim_save("ExamplePlay.gif",
animate(anim, width = 720, height = 440,
fps = 10, nframe = nFrames))
anim_save("ExamplePlay.gif",
animate(anim, width = 720, height = 440,
fps = 10, nframes = nFrames))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gganimate)
library(ggplot2)
library(cowplot)
library(repr)
games<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/games.csv")
players<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/players.csv")
plays<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/plays.csv")
week2<-read.csv("https://media.githubusercontent.com/media/cnickol26/BigDataBowl2023/main/nfl-big-data-bowl-2023/week2.csv")
example_play <- plays %>% filter(gameId==2021091902 & playId == 389) %>% select(gameId,playId,playDescription)
example_play <- inner_join(example_play,
games,
by = c("gameId" = "gameId"))
example_play <- inner_join(example_play,
week2,
by = c("gameId" = "gameId",
"playId" = "playId"))
cols_fill <- c("#FFA500", "#663300", "#5C4033")
cols_col <- c("#000000", "#663300", "#000000")
xmin <- 0
xmax <- 160/3
hash.right <- 38.35
hash.left <- 12
hash.width <- 3.3
plot_title <- str_trim(gsub("\\s*\\([^\\)]+\\)","",as.character(example_play$playDescription[1])))
ymin <- 0
ymax <- 120
#hash marks
df.hash <- expand.grid(x = c(0, 23.36667, 29.96667, xmax), y = (10:110))
df.hash <- df.hash %>% filter(!(floor(y %% 5) == 0))
df.hash <- df.hash %>% filter(y < ymax, y > ymin)
#plotting
p<- ggplot() +
#setting size and color parameters
scale_size_manual(values = c(6, 4, 6), guide = FALSE) +
scale_shape_manual(values = c(21, 16, 21), guide = FALSE) +
scale_fill_manual(values = cols_fill, guide = FALSE) +
scale_colour_manual(values = cols_col, guide = FALSE) +
#adding hash marks
annotate("text", x = df.hash$x[df.hash$x < 55/2],
y = df.hash$y[df.hash$x < 55/2], label = "_", hjust = 0, vjust = -0.2) +
annotate("text", x = df.hash$x[df.hash$x > 55/2],
y = df.hash$y[df.hash$x > 55/2], label = "_", hjust = 1, vjust = -0.2) +
#adding yard lines
annotate("segment", x = xmin,
y = seq(max(10, ymin), min(ymax, 110), by = 5),
xend =  xmax,
yend = seq(max(10, ymin), min(ymax, 110), by = 5)) +
#adding field yardline text
annotate("text", x = rep(hash.left, 11), y = seq(10, 110, by = 10),
label = c("G   ", seq(10, 50, by = 10), rev(seq(10, 40, by = 10)), "   G"),
angle = 270, size = 4) +
annotate("text", x = rep((xmax - hash.left), 11), y = seq(10, 110, by = 10),
label = c("   G", seq(10, 50, by = 10), rev(seq(10, 40, by = 10)), "G   "),
angle = 90, size = 4) +
#adding field exterior
annotate("segment", x = c(xmin, xmin, xmax, xmax),
y = c(ymin, ymax, ymax, ymin),
xend = c(xmin, xmax, xmax, xmin),
yend = c(ymax, ymax, ymin, ymin), colour = "black") +
#adding field interior
annotate("rect", xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax,
fill = "dark green", alpha = 0.2) +
#adding players
geom_point(data = example_play, aes(x = (xmax-y),
y = x,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team),
alpha = 0.7) +
#adding jersey numbers
geom_text(data = example_play, aes(x = (xmax-y), y = x, label = jerseyNumber), colour = "white",
vjust = 0.36, size = 3.5) +
#applying plot limits
ylim(ymin, ymax) +
coord_fixed() +
#applying theme
theme_nothing() +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes('linear')
animate(p)
install.packages('gifski')
install.packages('png')
