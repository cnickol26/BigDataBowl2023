#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team),
alpha = 0.7, stroke=2) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear")
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 46, yardmax = 66) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = "none") +
scale_shape_manual(values = shape_vals, guide = "none") +
scale_fill_manual(values = cols_fill, guide = "none", na.value=NA) +
scale_colour_manual(values = cols_col, guide = "none") +
discrete_scale("stroke", "stroke",
palette=function(x) stroke_vals
breaks = stroke_vals) +
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 46, yardmax = 66) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = "none") +
scale_shape_manual(values = shape_vals, guide = "none") +
scale_fill_manual(values = cols_fill, guide = "none", na.value=NA) +
scale_colour_manual(values = cols_col, guide = "none") +
discrete_scale("stroke", "stroke",
palette=function(x) stroke_vals,
breaks = stroke_vals) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team,
stroke = team),
alpha = 0.7) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear")
animate(anim, width = 720, height = 440,fps = 10, nframes = nFrames)
cols_fill <- c(NA, "#FF3C00", "#663300", "#03202F")
cols_col <- c("#F20000", "#000000", "#663300", "#000000")
size_vals <- c(14, 8, 5, 8)
shape_vals <- c(21, 21, 16, 21)
alpha_vals <- c(1, 0.7, 0.7, 0.7)
stroke_vals <- c(6, 1, 1, 1)
plot_title <- df_examplePlay$playDescription
nFrames <- max(df_examplePlayTracking$frameId)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 46, yardmax = 66) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = "none") +
scale_shape_manual(values = shape_vals, guide = "none") +
scale_fill_manual(values = cols_fill, guide = "none", na.value=NA) +
scale_colour_manual(values = cols_col, guide = "none") +
scale_alpha_manual(values = alpha_vals, guide="none") +
discrete_scale("stroke", "stroke",
palette=function(x) stroke_vals,
breaks = stroke_vals) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team,
stroke = team,
alpha = team)) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear")
animate(anim, width = 720, height = 440,fps = 10, nframes = nFrames)
stroke_vals <- c(4, 1, 1, 1)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 46, yardmax = 66) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = "none") +
scale_shape_manual(values = shape_vals, guide = "none") +
scale_fill_manual(values = cols_fill, guide = "none", na.value=NA) +
scale_colour_manual(values = cols_col, guide = "none") +
scale_alpha_manual(values = alpha_vals, guide="none") +
discrete_scale("stroke", "stroke",
palette=function(x) stroke_vals,
breaks = stroke_vals) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team,
stroke = team,
alpha = team)) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear")
animate(anim, width = 720, height = 440,fps = 10, nframes = nFrames)
example_play <- plays %>% filter(gameId==2021091902 & playId == 3392) %>% select(gameId,playId,playDescription)
#merging tracking data to play
df_examplePlayTracking <- inner_join(df_examplePlay,
week2,
by = c("gameId" = "gameId",
"playId" = "playId")) %>%
inner_join(players,
by="nflId") %>%
#Standardizing tracking data so its always in direction of offensive team.
mutate(x = ifelse(playDirection == "left", 120-x, x),
y = ifelse(playDirection == "left", 160/3 - y, y))
df_examplePlayTracking <- df_examplePlayTracking %>% filter(officialPosition %in%
c("T","QB", "DT", "DE", "C", "TE", "G", "football"))
df_circle <- df_examplePlayTracking %>% filter(jerseyNumber==95)
df_circle$nflId <- "circle"
df_circle$jerseyNumber <- NA
df_circle$team <- "circle"
df_circle$officialPosition <- "circle"
df_examplePlayTracking <- rbind(df_examplePlayTracking, df_circle)
cols_fill <- c(NA, "#FF3C00", "#663300", "#03202F")
cols_col <- c("#F20000", "#000000", "#663300", "#000000")
size_vals <- c(14, 8, 5, 8)
shape_vals <- c(21, 21, 16, 21)
alpha_vals <- c(1, 0.7, 0.7, 0.7)
stroke_vals <- c(4, 1, 1, 1)
plot_title <- df_examplePlay$playDescription
nFrames <- max(df_examplePlayTracking$frameId)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 46, yardmax = 66) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = "none") +
scale_shape_manual(values = shape_vals, guide = "none") +
scale_fill_manual(values = cols_fill, guide = "none", na.value=NA) +
scale_colour_manual(values = cols_col, guide = "none") +
scale_alpha_manual(values = alpha_vals, guide="none") +
discrete_scale("stroke", "stroke",
palette=function(x) stroke_vals,
breaks = stroke_vals) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team,
stroke = team,
alpha = team)) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear")
animate(anim, width = 720, height = 440,fps = 10, nframes = nFrames)
df_examplePlay <- plays %>% filter(gameId==2021091902 & playId == 3392) %>% select(gameId,playId,playDescription)
#merging tracking data to play
df_examplePlayTracking <- inner_join(df_examplePlay,
week2,
by = c("gameId" = "gameId",
"playId" = "playId")) %>%
inner_join(players,
by="nflId") %>%
#Standardizing tracking data so its always in direction of offensive team.
mutate(x = ifelse(playDirection == "left", 120-x, x),
y = ifelse(playDirection == "left", 160/3 - y, y))
df_examplePlayTracking <- df_examplePlayTracking %>% filter(officialPosition %in%
c("T","QB", "DT", "DE", "C", "TE", "G", "football"))
df_circle <- df_examplePlayTracking %>% filter(jerseyNumber==95)
df_circle$nflId <- "circle"
df_circle$jerseyNumber <- NA
df_circle$team <- "circle"
df_circle$officialPosition <- "circle"
df_examplePlayTracking <- rbind(df_examplePlayTracking, df_circle)
cols_fill <- c(NA, "#FF3C00", "#663300", "#03202F")
cols_col <- c("#F20000", "#000000", "#663300", "#000000")
size_vals <- c(14, 8, 5, 8)
shape_vals <- c(21, 21, 16, 21)
alpha_vals <- c(1, 0.7, 0.7, 0.7)
stroke_vals <- c(4, 1, 1, 1)
plot_title <- df_examplePlay$playDescription
nFrames <- max(df_examplePlayTracking$frameId)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 46, yardmax = 66) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = "none") +
scale_shape_manual(values = shape_vals, guide = "none") +
scale_fill_manual(values = cols_fill, guide = "none", na.value=NA) +
scale_colour_manual(values = cols_col, guide = "none") +
scale_alpha_manual(values = alpha_vals, guide="none") +
discrete_scale("stroke", "stroke",
palette=function(x) stroke_vals,
breaks = stroke_vals) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team,
stroke = team,
alpha = team)) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear")
animate(anim, width = 720, height = 440,fps = 10, nframes = nFrames)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 20, yardmax = 40) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = "none") +
scale_shape_manual(values = shape_vals, guide = "none") +
scale_fill_manual(values = cols_fill, guide = "none", na.value=NA) +
scale_colour_manual(values = cols_col, guide = "none") +
scale_alpha_manual(values = alpha_vals, guide="none") +
discrete_scale("stroke", "stroke",
palette=function(x) stroke_vals,
breaks = stroke_vals) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team,
stroke = team,
alpha = team)) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear")
animate(anim, width = 720, height = 440,fps = 10, nframes = nFrames)
df_examplePlay <- plays %>% filter(gameId==2021091902 & playId == 434) %>% select(gameId,playId,playDescription)
#merging tracking data to play
df_examplePlayTracking <- inner_join(df_examplePlay,
week2,
by = c("gameId" = "gameId",
"playId" = "playId")) %>%
inner_join(players,
by="nflId") %>%
#Standardizing tracking data so its always in direction of offensive team.
mutate(x = ifelse(playDirection == "left", 120-x, x),
y = ifelse(playDirection == "left", 160/3 - y, y))
df_examplePlayTracking <- df_examplePlayTracking %>% filter(officialPosition %in%
c("T","QB", "DT", "DE", "C", "TE", "G", "football"))
df_circle <- df_examplePlayTracking %>% filter(jerseyNumber==95)
df_circle$nflId <- "circle"
df_circle$jerseyNumber <- NA
df_circle$team <- "circle"
df_circle$officialPosition <- "circle"
df_examplePlayTracking <- rbind(df_examplePlayTracking, df_circle)
cols_fill <- c(NA, "#FF3C00", "#663300", "#03202F")
cols_col <- c("#F20000", "#000000", "#663300", "#000000")
size_vals <- c(14, 8, 5, 8)
shape_vals <- c(21, 21, 16, 21)
alpha_vals <- c(1, 0.7, 0.7, 0.7)
stroke_vals <- c(4, 1, 1, 1)
plot_title <- df_examplePlay$playDescription
nFrames <- max(df_examplePlayTracking$frameId)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 20, yardmax = 40) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = "none") +
scale_shape_manual(values = shape_vals, guide = "none") +
scale_fill_manual(values = cols_fill, guide = "none", na.value=NA) +
scale_colour_manual(values = cols_col, guide = "none") +
scale_alpha_manual(values = alpha_vals, guide="none") +
discrete_scale("stroke", "stroke",
palette=function(x) stroke_vals,
breaks = stroke_vals) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team,
stroke = team,
alpha = team)) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear")
animate(anim, width = 720, height = 440,fps = 10, nframes = nFrames)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 45, yardmax = 65) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = "none") +
scale_shape_manual(values = shape_vals, guide = "none") +
scale_fill_manual(values = cols_fill, guide = "none", na.value=NA) +
scale_colour_manual(values = cols_col, guide = "none") +
scale_alpha_manual(values = alpha_vals, guide="none") +
discrete_scale("stroke", "stroke",
palette=function(x) stroke_vals,
breaks = stroke_vals) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team,
stroke = team,
alpha = team)) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear")
animate(anim, width = 720, height = 440,fps = 10, nframes = nFrames)
df_examplePlay <- plays %>% filter(gameId==2021091902 & playId == 434) %>% select(gameId,playId,playDescription)
#merging tracking data to play
df_examplePlayTracking <- inner_join(df_examplePlay,
week2,
by = c("gameId" = "gameId",
"playId" = "playId")) %>%
inner_join(players,
by="nflId") %>%
#Standardizing tracking data so its always in direction of offensive team.
mutate(x = ifelse(playDirection == "left", 120-x, x),
y = ifelse(playDirection == "left", 160/3 - y, y))
df_examplePlayTracking <- df_examplePlayTracking %>% filter(officialPosition %in%
c("RB", "T","QB", "DT", "DE", "C", "TE", "G", "football"))
df_circle <- df_examplePlayTracking %>% filter(jerseyNumber==31)
df_circle$nflId <- "circle"
df_circle$jerseyNumber <- NA
df_circle$team <- "circle"
df_circle$officialPosition <- "circle"
df_examplePlayTracking <- rbind(df_examplePlayTracking, df_circle)
cols_fill <- c(NA, "#FF3C00", "#663300", "#03202F")
cols_col <- c("#F20000", "#000000", "#663300", "#000000")
size_vals <- c(14, 8, 5, 8)
shape_vals <- c(21, 21, 16, 21)
alpha_vals <- c(1, 0.7, 0.7, 0.7)
stroke_vals <- c(4, 1, 1, 1)
plot_title <- df_examplePlay$playDescription
nFrames <- max(df_examplePlayTracking$frameId)
#plotting
anim <- ggplot() +
#creating field underlay
gg_field(yardmin = 45, yardmax = 65) +
#filling forest green for behind back of endzone
theme(panel.background = element_rect(fill = "forestgreen",
color = "forestgreen"),
panel.grid = element_blank()) +
#setting size and color parameters
scale_size_manual(values = size_vals, guide = "none") +
scale_shape_manual(values = shape_vals, guide = "none") +
scale_fill_manual(values = cols_fill, guide = "none", na.value=NA) +
scale_colour_manual(values = cols_col, guide = "none") +
scale_alpha_manual(values = alpha_vals, guide="none") +
discrete_scale("stroke", "stroke",
palette=function(x) stroke_vals,
breaks = stroke_vals) +
#adding players
geom_point(data = df_examplePlayTracking, aes(x = x,
y = y,
shape = team,
fill = team,
group = nflId,
size = team,
colour = team,
stroke = team,
alpha = team)) +
#adding jersey numbers
geom_text(data = df_examplePlayTracking,
aes(x = x, y = y, label = jerseyNumber),
colour = "white",
vjust = 0.36, size = 3.5) +
#titling plot with play description
labs(title = plot_title) +
#setting animation parameters
transition_time(frameId)  +
ease_aes("linear")
animate(anim, width = 720, height = 440,fps = 10, nframes = nFrames)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gganimate)
library(ggplot2)
library(cowplot)
library(repr)
knitr::include_graphics("powerrush.gif")
install.packages('magick')
k
library(magick)
gif <- image_read("powerrush.gif")
image_animate(gif)
gif <- image_read("powerrush.gif")
gif1 <- image_animate(gif)
gif1
knitr:::include_graphics("powerrush2.gif")
knitr:::include_graphics("powerrush.gif")
knitr:::include_graphics("speedrush.gif")
knitr:::include_graphics("chipblock.gif")
